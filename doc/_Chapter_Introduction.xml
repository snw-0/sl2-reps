<?xml version="1.0" encoding="UTF-8"?>

<!-- This is an automatically generated file. -->
<Chapter Label="Chapter_Introduction">
<Heading>Introduction</Heading>

<P/>
This package, <Code>SL2Reps</Code>, provides methods for constructing and testing matrix
presentations of the representations of <Math>\mathrm{SL}_2(\mathbb{Z})</Math> whose kernels are congruence subgroups of <Math>\mathrm{SL}_2(\mathbb{Z})</Math>.
<P/>
Irreducible representations of prime-power level are constructed individually by using the Weil representations of quadratic modules, and from these a list of all representations of a given degree
or level can be produced. Each representation is represented by a pair <Math>(S,T)</Math>, where <Math>S</Math> is a symmetric,
unitary matrix and <Math>T</Math> is a diagonal matrix of finite order; this format is designed for the study of modular tensor categories in particular.
<P/>
<Section Label="Chapter_Introduction_Section_Installation">
<Heading>Installation</Heading>

<P/>
To install <Code>SL2Reps</Code>, first download it from <URL>https://snw-0.github.io/sl2-reps/</URL>, then place it in the <Code>pkg</Code>
subdirectory of your GAP installation (or in the <Code>pkg</Code> subdirectory of any other GAP
root directory, for example one added with the <Code>-l</Code> argument).
<P/>
<Code>SL2Reps</Code> is then loaded with the GAP command
<P/>
<Code>gap> LoadPackage( "SL2Reps" );</Code>
<P/>
</Section>


<Section Label="Chapter_Introduction_Section_Usage">
<Heading>Usage</Heading>

<P/>
Specific irreducible representations may be constructed via the methods in Chapter <Ref Chap="Chapter_Irreps"/>, while lists of irreducible representations with a given degree or level may be constructed with those in Chapter <Ref Chap="Chapter_Lists"/>.
<P/>
This package uses an <Code>InfoClass</Code>, <Code>InfoSL2Reps</Code>. It may be set to <Code>0</Code> (silent),
<Code>1</Code> (info), or <Code>2</Code> (verbose). To change it, use
<P/>
<Code>gap> SetInfoLevel( InfoSL2Reps, k );</Code>
<P/>
</Section>


</Chapter>

